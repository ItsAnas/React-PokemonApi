{"version":3,"sources":["components/SpinningButton.js","views/RandomPokemon.js","components/Navbar.js","views/Info.js","App.js","reportWebVitals.js","index.js"],"names":["SpinningButton","isActiveProps","text","setPokemon","setPokemonName","useState","isActive","setIsActive","handleClick","a","randomNum","Math","floor","random","axios","get","data","name","picture","types","map","t","className","disabled","onClick","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","RandomPokemonPage","pokemon","src","type","poketype","colors","console","error","classToAdd","GetTypeSpan","Nav","to","InfoPage","history","createBrowserHistory","App","exact","path","RandomPokemon","Info","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.919e4f86.chunk.js","sourcesContent":["import { useState, } from \"react\";\r\nimport axios from 'axios';\r\n\r\nconst SpinningButton = ({ isActiveProps, text, setPokemonName: setPokemon }) => {\r\n    const [isActive, setIsActive] = useState(isActiveProps);\r\n\r\n    const handleClick = async () => {\r\n        setIsActive(!isActive);\r\n        const randomNum = Math.floor(Math.random() * 150); // 1118 is the max\r\n        const data = await axios.get('https://pokeapi.co/api/v2/pokemon/' + randomNum);\r\n        setIsActive(isActive);\r\n        setPokemon(\r\n            {\r\n                name: data.data['name'],\r\n                picture: data.data['sprites']['front_default'],\r\n                types: data.data['types'].map((t) => t['type']['name'])\r\n            }\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"flex items-center\">\r\n            <button disabled={isActive} onClick={() => handleClick()} className=\"disabled:opacity-25 border rounded-full p-3 bg-purple-900 text-white hover:bg-pink-500 transition-all ease-linear duration-200\">\r\n                {text}\r\n            </button>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className={\"h-6 w-6 animate-spin \" + (isActive ? \"opacity-100\" : \"opacity-0\")} fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M18 12H6\" />\r\n            </svg>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default SpinningButton;","import { useState, } from \"react\";\r\nimport SpinningButton from \"../components/SpinningButton\";\r\n\r\nfunction GetTypeSpan(poketype) {\r\n    const colors = {\r\n        'normal': 'bg-gray-200',\r\n        'fire': 'bg-red-200',\r\n        'water': 'bg-blue-400',\r\n        'grass': 'bg-green-200',\r\n        'flying': 'bg-gray-200',\r\n        'fighting': 'bg-yellow-800',\r\n        'poison': 'bg-purple-200',\r\n        'electric': 'bg-yellow-200',\r\n        'ground': 'bg-gray-200',\r\n        'rock': 'bg-yellow-800',\r\n        'psychic': 'bg-purple-100',\r\n        'ice': 'bg-blue-100',\r\n        'bug': 'bg-green-200',\r\n        'ghost': 'bg-pink-200',\r\n        'steel': 'bg-gray-200',\r\n        'dragon': 'bg-blue-800',\r\n        'dark': 'bg-grey-500',\r\n        'fairy': 'bg-pink-300'\r\n    }\r\n\r\n    if (!(poketype in colors))\r\n        console.error(poketype + ' not found in colors');\r\n\r\n    const classToAdd = \"px-4 py-2  text-base rounded-full text-gray-600  \" + colors[poketype];\r\n\r\n    return <span key={poketype} className={classToAdd}>{poketype}</span>\r\n}\r\n\r\n\r\nfunction RandomPokemonPage() {\r\n\r\n    const [pokemon, setPokemon] = useState({\r\n        name: 'Pikachu',\r\n        picture: 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/25.png',\r\n        types: ['electric']\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"flex justify-center mb-5\">\r\n                <SpinningButton setPokemonName={setPokemon} isActive={false} text={\"Get a random pokemon\"} />\r\n            </div>\r\n\r\n            <div className=\"shadow-lg rounded-2xl  bg-white w-64 m-auto p-2\">\r\n                <img src={pokemon.picture} className=\"w-32 p-4 h-36 m-auto\" />\r\n                <div className=\"bg-pink-200 m-3 p-4 rounded-lg\">\r\n                    <p className=\"text-white text-xl font-bold \">\r\n                        {pokemon.name}\r\n                    </p>\r\n                </div>\r\n                <div className=\"flex flex-wrap items-center gap-4\">\r\n                    {pokemon.types.map((type) => GetTypeSpan(type))}\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RandomPokemonPage;\r\n","import { Link } from \"react-router-dom\";\r\n\r\n\r\n\r\nconst Nav = () => (\r\n    <nav className=\"w-screen relative mb-5 flex bg-gradient-to-r from-purple-800 to-purple-600\">\r\n        <div className=\"p-5 dark:text-white\">\r\n            <Link to=\"/\">\r\n                Pokemon Dict\r\n            </Link>\r\n        </div>\r\n        <div className=\"p-5 dark:text-white\">\r\n            <Link to=\"/info\">\r\n                Info\r\n            </Link>\r\n        </div>\r\n    </nav>\r\n);\r\n\r\n\r\nexport default Nav;","const InfoPage = () => (\r\n    <div className=\" flex items-center \">\r\n        <div className=\"h-3/5 w-1/4  m-auto\">\r\n            <div className=\"shadow-md p-5\">\r\n                <p className=\"mb-5\">\r\n                    This dead simple website has been done to learn how to create a website with React from scratch.\r\n                    It uses the PokeAPI (https://pokeapi.co/) in order to get data. ðŸ˜Š\r\n                </p>\r\n                <h3 className=\"font-bold text-lg\">\r\n                    Tools used:\r\n                </h3>\r\n                <ul className=\"list-disc list-inside\">\r\n                    <li>\r\n                        React JS\r\n                    </li>\r\n                    <li>\r\n                        React router\r\n                    </li>\r\n                    <li>\r\n                        Tailwind CSS\r\n                    </li>\r\n                    <li>\r\n                        Craco\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default InfoPage;","import { Route, Router, Switch } from \"react-router\";\nimport RandomPokemonPage from \"./views/RandomPokemon\";\nimport { createBrowserHistory } from \"history\";\nimport Nav from \"./components/Navbar\";\nimport InfoPage from \"./views/Info\";\n\nconst history = createBrowserHistory();\n\nconst App = () => (\n  <Router history={history}>\n    <Nav />\n    <Switch>\n      <Route exact path=\"/\">\n        <RandomPokemonPage />\n      </Route>\n      <Route exact path=\"/info\">\n        <InfoPage />\n      </Route>\n    </Switch>\n  </Router>\n);\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}